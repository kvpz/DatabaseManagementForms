<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="IdeallyConnectedTestDbDataSet" targetNamespace="http://tempuri.org/IdeallyConnectedTestDbDataSet.xsd" xmlns:mstns="http://tempuri.org/IdeallyConnectedTestDbDataSet.xsd" xmlns="http://tempuri.org/IdeallyConnectedTestDbDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="IdeallyConnectedTestDbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="IdeallyConnectedTestDbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DatabaseManagementForms.Properties.Settings.GlobalReference.Default.IdeallyConnectedTestDbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="__MigrationHistoryTableAdapter" GeneratorDataComponentClassName="__MigrationHistoryTableAdapter" Name="__MigrationHistory" UserDataComponentName="__MigrationHistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.__MigrationHistory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[__MigrationHistory] WHERE (([MigrationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey) AND ([ProductVersion] = @Original_ProductVersion))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[__MigrationHistory] ([MigrationId], [ContextKey], [Model], [ProductVersion]) VALUES (@MigrationId, @ContextKey, @Model, @ProductVersion);
SELECT MigrationId, ContextKey, Model, ProductVersion FROM __MigrationHistory WHERE (ContextKey = @ContextKey) AND (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MigrationId, ContextKey, Model, ProductVersion FROM dbo.[__MigrationHistory]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[__MigrationHistory] SET [MigrationId] = @MigrationId, [ContextKey] = @ContextKey, [Model] = @Model, [ProductVersion] = @ProductVersion WHERE (([MigrationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey) AND ([ProductVersion] = @Original_ProductVersion));
SELECT MigrationId, ContextKey, Model, ProductVersion FROM __MigrationHistory WHERE (ContextKey = @ContextKey) AND (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MigrationId" DataSetColumn="MigrationId" />
              <Mapping SourceColumn="ContextKey" DataSetColumn="ContextKey" />
              <Mapping SourceColumn="Model" DataSetColumn="Model" />
              <Mapping SourceColumn="ProductVersion" DataSetColumn="ProductVersion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BusinessesTableAdapter" GeneratorDataComponentClassName="BusinessesTableAdapter" Name="Businesses" UserDataComponentName="BusinessesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.Businesses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Businesses] WHERE (([Name] = @Original_Name) AND ([LocationID] = @Original_LocationID) AND ([ChatService] = @Original_ChatService) AND ([P2PService] = @Original_P2PService))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LocationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LocationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_ChatService" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ChatService" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_P2PService" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="P2PService" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Businesses] ([Name], [LocationID], [ChatService], [P2PService]) VALUES (@Name, @LocationID, @ChatService, @P2PService);
SELECT Name, LocationID, ChatService, P2PService FROM Businesses WHERE (LocationID = @LocationID) AND (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LocationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LocationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@ChatService" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ChatService" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@P2PService" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="P2PService" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, LocationID, ChatService, P2PService FROM dbo.Businesses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Businesses] SET [Name] = @Name, [LocationID] = @LocationID, [ChatService] = @ChatService, [P2PService] = @P2PService WHERE (([Name] = @Original_Name) AND ([LocationID] = @Original_LocationID) AND ([ChatService] = @Original_ChatService) AND ([P2PService] = @Original_P2PService));
SELECT Name, LocationID, ChatService, P2PService FROM Businesses WHERE (LocationID = @LocationID) AND (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LocationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LocationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@ChatService" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ChatService" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@P2PService" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="P2PService" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LocationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LocationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_ChatService" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ChatService" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_P2PService" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="P2PService" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="LocationID" DataSetColumn="LocationID" />
              <Mapping SourceColumn="ChatService" DataSetColumn="ChatService" />
              <Mapping SourceColumn="P2PService" DataSetColumn="P2PService" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CollaboratorsTableAdapter" GeneratorDataComponentClassName="CollaboratorsTableAdapter" Name="Collaborators" UserDataComponentName="CollaboratorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.Collaborators" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Collaborators] WHERE (([UserA] = @Original_UserA) AND ([UserB] = @Original_UserB) AND ([Following] = @Original_Following) AND ([Initiated] = @Original_Initiated) AND ([InitialCollaboration] = @Original_InitialCollaboration))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserA" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserA" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserB" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserB" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Following" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Following" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Initiated" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Initiated" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_InitialCollaboration" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="InitialCollaboration" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Collaborators] ([UserA], [UserB], [Following], [Initiated], [InitialCollaboration]) VALUES (@UserA, @UserB, @Following, @Initiated, @InitialCollaboration);
SELECT UserA, UserB, Following, Initiated, InitialCollaboration FROM Collaborators WHERE (UserA = @UserA) AND (UserB = @UserB)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserA" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserA" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserB" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserB" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Following" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Following" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Initiated" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Initiated" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@InitialCollaboration" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="InitialCollaboration" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserA, UserB, Following, Initiated, InitialCollaboration FROM dbo.Collaborators</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Collaborators] SET [UserA] = @UserA, [UserB] = @UserB, [Following] = @Following, [Initiated] = @Initiated, [InitialCollaboration] = @InitialCollaboration WHERE (([UserA] = @Original_UserA) AND ([UserB] = @Original_UserB) AND ([Following] = @Original_Following) AND ([Initiated] = @Original_Initiated) AND ([InitialCollaboration] = @Original_InitialCollaboration));
SELECT UserA, UserB, Following, Initiated, InitialCollaboration FROM Collaborators WHERE (UserA = @UserA) AND (UserB = @UserB)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserA" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserA" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserB" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserB" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Following" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Following" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Initiated" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Initiated" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@InitialCollaboration" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="InitialCollaboration" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserA" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserA" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserB" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserB" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Following" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Following" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Initiated" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Initiated" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_InitialCollaboration" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="InitialCollaboration" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserA" DataSetColumn="UserA" />
              <Mapping SourceColumn="UserB" DataSetColumn="UserB" />
              <Mapping SourceColumn="Following" DataSetColumn="Following" />
              <Mapping SourceColumn="Initiated" DataSetColumn="Initiated" />
              <Mapping SourceColumn="InitialCollaboration" DataSetColumn="InitialCollaboration" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DesignSkillsTableAdapter" GeneratorDataComponentClassName="DesignSkillsTableAdapter" Name="DesignSkills" UserDataComponentName="DesignSkillsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.DesignSkills" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DesignSkills] WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DesignSkills] ([ID], [Type], [TypeOfDesign], [Software]) VALUES (@ID, @Type, @TypeOfDesign, @Software);
SELECT ID, Type, TypeOfDesign, Software FROM DesignSkills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TypeOfDesign" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TypeOfDesign" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Software" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Software" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Type, TypeOfDesign, Software FROM dbo.DesignSkills</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DesignSkills] SET [ID] = @ID, [Type] = @Type, [TypeOfDesign] = @TypeOfDesign, [Software] = @Software WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type));
SELECT ID, Type, TypeOfDesign, Software FROM DesignSkills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TypeOfDesign" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TypeOfDesign" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Software" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Software" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="TypeOfDesign" DataSetColumn="TypeOfDesign" />
              <Mapping SourceColumn="Software" DataSetColumn="Software" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LocationsTableAdapter" GeneratorDataComponentClassName="LocationsTableAdapter" Name="Locations" UserDataComponentName="LocationsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.Locations" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Locations] WHERE (([ID] = @Original_ID) AND ([Latitude] = @Original_Latitude) AND ([Longitude] = @Original_Longitude))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Latitude" Precision="18" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Latitude" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Longitude" Precision="18" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Longitude" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Locations] ([Address], [ZipCode], [State], [StateAbbreviation], [City], [County], [Latitude], [Longitude]) VALUES (@Address, @ZipCode, @State, @StateAbbreviation, @City, @County, @Latitude, @Longitude);
SELECT ID, Address, ZipCode, State, StateAbbreviation, City, County, Latitude, Longitude FROM Locations WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ZipCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ZipCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@State" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="State" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StateAbbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StateAbbreviation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@City" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="City" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@County" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="County" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Latitude" Precision="18" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Latitude" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Longitude" Precision="18" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Longitude" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Address, ZipCode, State, StateAbbreviation, City, County, Latitude, Longitude FROM dbo.Locations</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Locations] SET [Address] = @Address, [ZipCode] = @ZipCode, [State] = @State, [StateAbbreviation] = @StateAbbreviation, [City] = @City, [County] = @County, [Latitude] = @Latitude, [Longitude] = @Longitude WHERE (([ID] = @Original_ID) AND ([Latitude] = @Original_Latitude) AND ([Longitude] = @Original_Longitude));
SELECT ID, Address, ZipCode, State, StateAbbreviation, City, County, Latitude, Longitude FROM Locations WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ZipCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ZipCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@State" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="State" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StateAbbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StateAbbreviation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@City" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="City" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@County" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="County" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Latitude" Precision="18" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Latitude" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Longitude" Precision="18" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Longitude" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Latitude" Precision="18" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Latitude" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Longitude" Precision="18" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Longitude" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="IdeallyConnectedTestDb.dbo.Locations" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
              <Mapping SourceColumn="ZipCode" DataSetColumn="ZipCode" />
              <Mapping SourceColumn="State" DataSetColumn="State" />
              <Mapping SourceColumn="StateAbbreviation" DataSetColumn="StateAbbreviation" />
              <Mapping SourceColumn="City" DataSetColumn="City" />
              <Mapping SourceColumn="County" DataSetColumn="County" />
              <Mapping SourceColumn="Latitude" DataSetColumn="Latitude" />
              <Mapping SourceColumn="Longitude" DataSetColumn="Longitude" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MedicalSkillsTableAdapter" GeneratorDataComponentClassName="MedicalSkillsTableAdapter" Name="MedicalSkills" UserDataComponentName="MedicalSkillsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.MedicalSkills" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MedicalSkills] WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type) AND ([CPR] = @Original_CPR) AND ([EKG] = @Original_EKG) AND ([Transfussions] = @Original_Transfussions))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_CPR" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="CPR" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_EKG" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="EKG" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Transfussions" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Transfussions" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MedicalSkills] ([ID], [Type], [CPR], [EKG], [Transfussions]) VALUES (@ID, @Type, @CPR, @EKG, @Transfussions);
SELECT ID, Type, CPR, EKG, Transfussions FROM MedicalSkills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@CPR" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="CPR" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@EKG" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="EKG" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Transfussions" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Transfussions" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Type, CPR, EKG, Transfussions FROM dbo.MedicalSkills</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MedicalSkills] SET [ID] = @ID, [Type] = @Type, [CPR] = @CPR, [EKG] = @EKG, [Transfussions] = @Transfussions WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type) AND ([CPR] = @Original_CPR) AND ([EKG] = @Original_EKG) AND ([Transfussions] = @Original_Transfussions));
SELECT ID, Type, CPR, EKG, Transfussions FROM MedicalSkills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@CPR" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="CPR" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@EKG" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="EKG" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Transfussions" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Transfussions" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_CPR" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="CPR" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_EKG" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="EKG" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Transfussions" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Transfussions" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="CPR" DataSetColumn="CPR" />
              <Mapping SourceColumn="EKG" DataSetColumn="EKG" />
              <Mapping SourceColumn="Transfussions" DataSetColumn="Transfussions" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProgrammingSkillsTableAdapter" GeneratorDataComponentClassName="ProgrammingSkillsTableAdapter" Name="ProgrammingSkills" UserDataComponentName="ProgrammingSkillsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.ProgrammingSkills" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ProgrammingSkills] WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ProgrammingSkills] ([ID], [Type], [ProgrammingLanguages], [Software]) VALUES (@ID, @Type, @ProgrammingLanguages, @Software);
SELECT ID, Type, ProgrammingLanguages, Software FROM ProgrammingSkills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProgrammingLanguages" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProgrammingLanguages" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Software" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Software" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Type, ProgrammingLanguages, Software FROM dbo.ProgrammingSkills</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ProgrammingSkills] SET [ID] = @ID, [Type] = @Type, [ProgrammingLanguages] = @ProgrammingLanguages, [Software] = @Software WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type));
SELECT ID, Type, ProgrammingLanguages, Software FROM ProgrammingSkills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProgrammingLanguages" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProgrammingLanguages" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Software" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Software" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="ProgrammingLanguages" DataSetColumn="ProgrammingLanguages" />
              <Mapping SourceColumn="Software" DataSetColumn="Software" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolesTableAdapter" GeneratorDataComponentClassName="RolesTableAdapter" Name="Roles" UserDataComponentName="RolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roles] ([Id], [Name]) VALUES (@Id, @Name);
SELECT Id, Name FROM Roles WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.Roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roles] SET [Id] = @Id, [Name] = @Name WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name));
SELECT Id, Name FROM Roles WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SkillsTableAdapter" GeneratorDataComponentClassName="SkillsTableAdapter" Name="Skills" UserDataComponentName="SkillsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.Skills" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Skills] WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type) AND ((@IsNull_Expertise = 1 AND [Expertise] IS NULL) OR ([Expertise] = @Original_Expertise)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Expertise" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Expertise" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_Expertise" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Expertise" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Skills] ([ID], [Type], [Expertise], [Description]) VALUES (@ID, @Type, @Expertise, @Description);
SELECT ID, Type, Expertise, Description FROM Skills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Expertise" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Expertise" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Type, Expertise, Description FROM dbo.Skills</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Skills] SET [ID] = @ID, [Type] = @Type, [Expertise] = @Expertise, [Description] = @Description WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type) AND ((@IsNull_Expertise = 1 AND [Expertise] IS NULL) OR ([Expertise] = @Original_Expertise)));
SELECT ID, Type, Expertise, Description FROM Skills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Expertise" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Expertise" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Expertise" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Expertise" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_Expertise" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Expertise" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="Expertise" DataSetColumn="Expertise" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SkillUserRelationTableAdapter" GeneratorDataComponentClassName="SkillUserRelationTableAdapter" Name="SkillUserRelation" UserDataComponentName="SkillUserRelationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.SkillUserRelation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SkillUserRelation] WHERE (([UserId] = @Original_UserId) AND ([SkillId] = @Original_SkillId) AND ([Type] = @Original_Type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_SkillId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="SkillId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SkillUserRelation] ([UserId], [SkillId], [Type]) VALUES (@UserId, @SkillId, @Type);
SELECT UserId, SkillId, Type FROM SkillUserRelation WHERE (SkillId = @SkillId) AND (Type = @Type) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@SkillId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="SkillId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserId, SkillId, Type FROM dbo.SkillUserRelation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SkillUserRelation] SET [UserId] = @UserId, [SkillId] = @SkillId, [Type] = @Type WHERE (([UserId] = @Original_UserId) AND ([SkillId] = @Original_SkillId) AND ([Type] = @Original_Type));
SELECT UserId, SkillId, Type FROM SkillUserRelation WHERE (SkillId = @SkillId) AND (Type = @Type) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@SkillId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="SkillId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_SkillId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="SkillId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="SkillId" DataSetColumn="SkillId" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SpeakingSkillsTableAdapter" GeneratorDataComponentClassName="SpeakingSkillsTableAdapter" Name="SpeakingSkills" UserDataComponentName="SpeakingSkillsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.SpeakingSkills" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SpeakingSkills] WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SpeakingSkills] ([ID], [Type], [Languages]) VALUES (@ID, @Type, @Languages);
SELECT ID, Type, Languages FROM SpeakingSkills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Languages" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Languages" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Type, Languages FROM dbo.SpeakingSkills</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SpeakingSkills] SET [ID] = @ID, [Type] = @Type, [Languages] = @Languages WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type));
SELECT ID, Type, Languages FROM SpeakingSkills WHERE (ID = @ID) AND (Type = @Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Languages" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Languages" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="Languages" DataSetColumn="Languages" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserClaimsTableAdapter" GeneratorDataComponentClassName="UserClaimsTableAdapter" Name="UserClaims" UserDataComponentName="UserClaimsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.UserClaims" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserClaims] WHERE (([Id] = @Original_Id) AND ([UserId] = @Original_UserId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserClaims] ([UserId], [ClaimType], [ClaimValue]) VALUES (@UserId, @ClaimType, @ClaimValue);
SELECT Id, UserId, ClaimType, ClaimValue FROM UserClaims WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClaimType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClaimType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClaimValue" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClaimValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, UserId, ClaimType, ClaimValue FROM dbo.UserClaims</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserClaims] SET [UserId] = @UserId, [ClaimType] = @ClaimType, [ClaimValue] = @ClaimValue WHERE (([Id] = @Original_Id) AND ([UserId] = @Original_UserId));
SELECT Id, UserId, ClaimType, ClaimValue FROM UserClaims WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClaimType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClaimType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClaimValue" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClaimValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="IdeallyConnectedTestDb.dbo.UserClaims" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="ClaimType" DataSetColumn="ClaimType" />
              <Mapping SourceColumn="ClaimValue" DataSetColumn="ClaimValue" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserLocationsTableAdapter" GeneratorDataComponentClassName="UserLocationsTableAdapter" Name="UserLocations" UserDataComponentName="UserLocationsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.UserLocations" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserLocations] WHERE (([UserID] = @Original_UserID) AND ([LocationID] = @Original_LocationID) AND ([TotalVisitations] = @Original_TotalVisitations) AND ([FirstVisited] = @Original_FirstVisited) AND ([LastVisited] = @Original_LastVisited))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LocationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LocationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TotalVisitations" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalVisitations" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_FirstVisited" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="FirstVisited" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_LastVisited" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LastVisited" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserLocations] ([UserID], [LocationID], [TotalVisitations], [FirstVisited], [LastVisited]) VALUES (@UserID, @LocationID, @TotalVisitations, @FirstVisited, @LastVisited);
SELECT UserID, LocationID, TotalVisitations, FirstVisited, LastVisited FROM UserLocations WHERE (LocationID = @LocationID) AND (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LocationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LocationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TotalVisitations" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalVisitations" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@FirstVisited" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="FirstVisited" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@LastVisited" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LastVisited" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, LocationID, TotalVisitations, FirstVisited, LastVisited FROM dbo.UserLocations</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserLocations] SET [UserID] = @UserID, [LocationID] = @LocationID, [TotalVisitations] = @TotalVisitations, [FirstVisited] = @FirstVisited, [LastVisited] = @LastVisited WHERE (([UserID] = @Original_UserID) AND ([LocationID] = @Original_LocationID) AND ([TotalVisitations] = @Original_TotalVisitations) AND ([FirstVisited] = @Original_FirstVisited) AND ([LastVisited] = @Original_LastVisited));
SELECT UserID, LocationID, TotalVisitations, FirstVisited, LastVisited FROM UserLocations WHERE (LocationID = @LocationID) AND (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LocationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LocationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TotalVisitations" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalVisitations" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@FirstVisited" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="FirstVisited" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@LastVisited" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LastVisited" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LocationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LocationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TotalVisitations" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalVisitations" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_FirstVisited" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="FirstVisited" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_LastVisited" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LastVisited" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="LocationID" DataSetColumn="LocationID" />
              <Mapping SourceColumn="TotalVisitations" DataSetColumn="TotalVisitations" />
              <Mapping SourceColumn="FirstVisited" DataSetColumn="FirstVisited" />
              <Mapping SourceColumn="LastVisited" DataSetColumn="LastVisited" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserLoginsTableAdapter" GeneratorDataComponentClassName="UserLoginsTableAdapter" Name="UserLogins" UserDataComponentName="UserLoginsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.UserLogins" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserLogins] WHERE (([LoginProvider] = @Original_LoginProvider) AND ([ProviderKey] = @Original_ProviderKey) AND ([UserId] = @Original_UserId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LoginProvider" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LoginProvider" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProviderKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserLogins] ([LoginProvider], [ProviderKey], [UserId]) VALUES (@LoginProvider, @ProviderKey, @UserId);
SELECT LoginProvider, ProviderKey, UserId FROM UserLogins WHERE (LoginProvider = @LoginProvider) AND (ProviderKey = @ProviderKey) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LoginProvider" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LoginProvider" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProviderKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LoginProvider, ProviderKey, UserId FROM dbo.UserLogins</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserLogins] SET [LoginProvider] = @LoginProvider, [ProviderKey] = @ProviderKey, [UserId] = @UserId WHERE (([LoginProvider] = @Original_LoginProvider) AND ([ProviderKey] = @Original_ProviderKey) AND ([UserId] = @Original_UserId));
SELECT LoginProvider, ProviderKey, UserId FROM UserLogins WHERE (LoginProvider = @LoginProvider) AND (ProviderKey = @ProviderKey) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LoginProvider" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LoginProvider" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProviderKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LoginProvider" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LoginProvider" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProviderKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LoginProvider" DataSetColumn="LoginProvider" />
              <Mapping SourceColumn="ProviderKey" DataSetColumn="ProviderKey" />
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserRolesTableAdapter" GeneratorDataComponentClassName="UserRolesTableAdapter" Name="UserRoles" UserDataComponentName="UserRolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.UserRoles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserRoles] WHERE (([UserId] = @Original_UserId) AND ([RoleId] = @Original_RoleId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserRoles] ([UserId], [RoleId]) VALUES (@UserId, @RoleId);
SELECT UserId, RoleId FROM UserRoles WHERE (RoleId = @RoleId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserId, RoleId FROM dbo.UserRoles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserRoles] SET [UserId] = @UserId, [RoleId] = @RoleId WHERE (([UserId] = @Original_UserId) AND ([RoleId] = @Original_RoleId));
SELECT UserId, RoleId FROM UserRoles WHERE (RoleId = @RoleId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IdeallyConnectedTestDbConnectionString (Settings)" DbObjectName="IdeallyConnectedTestDb.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([Id] = @Original_Id) AND ([UserName] = @Original_UserName) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([Created] = @Original_Created) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)) AND ([EmailConfirmed] = @Original_EmailConfirmed) AND ([PhoneNumberConfirmed] = @Original_PhoneNumberConfirmed) AND ([TwoFactorEnabled] = @Original_TwoFactorEnabled) AND ((@IsNull_LockoutEndDateUtc = 1 AND [LockoutEndDateUtc] IS NULL) OR ([LockoutEndDateUtc] = @Original_LockoutEndDateUtc)) AND ([LockoutEnabled] = @Original_LockoutEnabled) AND ([AccessFailedCount] = @Original_AccessFailedCount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Created" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Created" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_EmailConfirmed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="EmailConfirmed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_PhoneNumberConfirmed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="PhoneNumberConfirmed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_TwoFactorEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="TwoFactorEnabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LockoutEndDateUtc" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LockoutEndDateUtc" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_LockoutEndDateUtc" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LockoutEndDateUtc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_LockoutEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="LockoutEnabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccessFailedCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessFailedCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([Id], [UserName], [FirstName], [LastName], [Biography], [Created], [Email], [EmailConfirmed], [PasswordHash], [SecurityStamp], [PhoneNumber], [PhoneNumberConfirmed], [TwoFactorEnabled], [LockoutEndDateUtc], [LockoutEnabled], [AccessFailedCount]) VALUES (@Id, @UserName, @FirstName, @LastName, @Biography, @Created, @Email, @EmailConfirmed, @PasswordHash, @SecurityStamp, @PhoneNumber, @PhoneNumberConfirmed, @TwoFactorEnabled, @LockoutEndDateUtc, @LockoutEnabled, @AccessFailedCount);
SELECT Id, UserName, FirstName, LastName, Biography, Created, Email, EmailConfirmed, PasswordHash, SecurityStamp, PhoneNumber, PhoneNumberConfirmed, TwoFactorEnabled, LockoutEndDateUtc, LockoutEnabled, AccessFailedCount FROM Users WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Biography" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Biography" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Created" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Created" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@EmailConfirmed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="EmailConfirmed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PasswordHash" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityStamp" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityStamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PhoneNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PhoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@PhoneNumberConfirmed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="PhoneNumberConfirmed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@TwoFactorEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="TwoFactorEnabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@LockoutEndDateUtc" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LockoutEndDateUtc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@LockoutEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="LockoutEnabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccessFailedCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessFailedCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, UserName, FirstName, LastName, Biography, Created, Email, EmailConfirmed, PasswordHash, SecurityStamp, PhoneNumber, PhoneNumberConfirmed, TwoFactorEnabled, LockoutEndDateUtc, LockoutEnabled, AccessFailedCount FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [Id] = @Id, [UserName] = @UserName, [FirstName] = @FirstName, [LastName] = @LastName, [Biography] = @Biography, [Created] = @Created, [Email] = @Email, [EmailConfirmed] = @EmailConfirmed, [PasswordHash] = @PasswordHash, [SecurityStamp] = @SecurityStamp, [PhoneNumber] = @PhoneNumber, [PhoneNumberConfirmed] = @PhoneNumberConfirmed, [TwoFactorEnabled] = @TwoFactorEnabled, [LockoutEndDateUtc] = @LockoutEndDateUtc, [LockoutEnabled] = @LockoutEnabled, [AccessFailedCount] = @AccessFailedCount WHERE (([Id] = @Original_Id) AND ([UserName] = @Original_UserName) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([Created] = @Original_Created) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)) AND ([EmailConfirmed] = @Original_EmailConfirmed) AND ([PhoneNumberConfirmed] = @Original_PhoneNumberConfirmed) AND ([TwoFactorEnabled] = @Original_TwoFactorEnabled) AND ((@IsNull_LockoutEndDateUtc = 1 AND [LockoutEndDateUtc] IS NULL) OR ([LockoutEndDateUtc] = @Original_LockoutEndDateUtc)) AND ([LockoutEnabled] = @Original_LockoutEnabled) AND ([AccessFailedCount] = @Original_AccessFailedCount));
SELECT Id, UserName, FirstName, LastName, Biography, Created, Email, EmailConfirmed, PasswordHash, SecurityStamp, PhoneNumber, PhoneNumberConfirmed, TwoFactorEnabled, LockoutEndDateUtc, LockoutEnabled, AccessFailedCount FROM Users WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Biography" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Biography" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Created" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Created" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@EmailConfirmed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="EmailConfirmed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PasswordHash" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityStamp" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityStamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PhoneNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PhoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@PhoneNumberConfirmed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="PhoneNumberConfirmed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@TwoFactorEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="TwoFactorEnabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@LockoutEndDateUtc" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LockoutEndDateUtc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@LockoutEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="LockoutEnabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccessFailedCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessFailedCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Created" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Created" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_EmailConfirmed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="EmailConfirmed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_PhoneNumberConfirmed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="PhoneNumberConfirmed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_TwoFactorEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="TwoFactorEnabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LockoutEndDateUtc" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LockoutEndDateUtc" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_LockoutEndDateUtc" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LockoutEndDateUtc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_LockoutEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="LockoutEnabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccessFailedCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessFailedCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="Biography" DataSetColumn="Biography" />
              <Mapping SourceColumn="Created" DataSetColumn="Created" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="EmailConfirmed" DataSetColumn="EmailConfirmed" />
              <Mapping SourceColumn="PasswordHash" DataSetColumn="PasswordHash" />
              <Mapping SourceColumn="SecurityStamp" DataSetColumn="SecurityStamp" />
              <Mapping SourceColumn="PhoneNumber" DataSetColumn="PhoneNumber" />
              <Mapping SourceColumn="PhoneNumberConfirmed" DataSetColumn="PhoneNumberConfirmed" />
              <Mapping SourceColumn="TwoFactorEnabled" DataSetColumn="TwoFactorEnabled" />
              <Mapping SourceColumn="LockoutEndDateUtc" DataSetColumn="LockoutEndDateUtc" />
              <Mapping SourceColumn="LockoutEnabled" DataSetColumn="LockoutEnabled" />
              <Mapping SourceColumn="AccessFailedCount" DataSetColumn="AccessFailedCount" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="IdeallyConnectedTestDbDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="IdeallyConnectedTestDbDataSet" msprop:Generator_UserDSName="IdeallyConnectedTestDbDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="__MigrationHistory" msprop:Generator_TableClassName="__MigrationHistoryDataTable" msprop:Generator_TableVarName="table__MigrationHistory" msprop:Generator_TablePropName="__MigrationHistory" msprop:Generator_RowDeletingName="__MigrationHistoryRowDeleting" msprop:Generator_RowChangingName="__MigrationHistoryRowChanging" msprop:Generator_RowEvHandlerName="__MigrationHistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="__MigrationHistoryRowDeleted" msprop:Generator_UserTableName="__MigrationHistory" msprop:Generator_RowChangedName="__MigrationHistoryRowChanged" msprop:Generator_RowEvArgName="__MigrationHistoryRowChangeEvent" msprop:Generator_RowClassName="__MigrationHistoryRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MigrationId" msprop:Generator_ColumnVarNameInTable="columnMigrationId" msprop:Generator_ColumnPropNameInRow="MigrationId" msprop:Generator_ColumnPropNameInTable="MigrationIdColumn" msprop:Generator_UserColumnName="MigrationId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ContextKey" msprop:Generator_ColumnVarNameInTable="columnContextKey" msprop:Generator_ColumnPropNameInRow="ContextKey" msprop:Generator_ColumnPropNameInTable="ContextKeyColumn" msprop:Generator_UserColumnName="ContextKey">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Model" msprop:Generator_ColumnVarNameInTable="columnModel" msprop:Generator_ColumnPropNameInRow="Model" msprop:Generator_ColumnPropNameInTable="ModelColumn" msprop:Generator_UserColumnName="Model" type="xs:base64Binary" />
              <xs:element name="ProductVersion" msprop:Generator_ColumnVarNameInTable="columnProductVersion" msprop:Generator_ColumnPropNameInRow="ProductVersion" msprop:Generator_ColumnPropNameInTable="ProductVersionColumn" msprop:Generator_UserColumnName="ProductVersion">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Businesses" msprop:Generator_TableClassName="BusinessesDataTable" msprop:Generator_TableVarName="tableBusinesses" msprop:Generator_TablePropName="Businesses" msprop:Generator_RowDeletingName="BusinessesRowDeleting" msprop:Generator_RowChangingName="BusinessesRowChanging" msprop:Generator_RowEvHandlerName="BusinessesRowChangeEventHandler" msprop:Generator_RowDeletedName="BusinessesRowDeleted" msprop:Generator_UserTableName="Businesses" msprop:Generator_RowChangedName="BusinessesRowChanged" msprop:Generator_RowEvArgName="BusinessesRowChangeEvent" msprop:Generator_RowClassName="BusinessesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LocationID" msprop:Generator_ColumnVarNameInTable="columnLocationID" msprop:Generator_ColumnPropNameInRow="LocationID" msprop:Generator_ColumnPropNameInTable="LocationIDColumn" msprop:Generator_UserColumnName="LocationID" type="xs:int" />
              <xs:element name="ChatService" msprop:Generator_ColumnVarNameInTable="columnChatService" msprop:Generator_ColumnPropNameInRow="ChatService" msprop:Generator_ColumnPropNameInTable="ChatServiceColumn" msprop:Generator_UserColumnName="ChatService" type="xs:boolean" />
              <xs:element name="P2PService" msprop:Generator_ColumnVarNameInTable="columnP2PService" msprop:Generator_ColumnPropNameInRow="P2PService" msprop:Generator_ColumnPropNameInTable="P2PServiceColumn" msprop:Generator_UserColumnName="P2PService" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Collaborators" msprop:Generator_TableClassName="CollaboratorsDataTable" msprop:Generator_TableVarName="tableCollaborators" msprop:Generator_TablePropName="Collaborators" msprop:Generator_RowDeletingName="CollaboratorsRowDeleting" msprop:Generator_RowChangingName="CollaboratorsRowChanging" msprop:Generator_RowEvHandlerName="CollaboratorsRowChangeEventHandler" msprop:Generator_RowDeletedName="CollaboratorsRowDeleted" msprop:Generator_UserTableName="Collaborators" msprop:Generator_RowChangedName="CollaboratorsRowChanged" msprop:Generator_RowEvArgName="CollaboratorsRowChangeEvent" msprop:Generator_RowClassName="CollaboratorsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserA" msprop:Generator_ColumnVarNameInTable="columnUserA" msprop:Generator_ColumnPropNameInRow="UserA" msprop:Generator_ColumnPropNameInTable="UserAColumn" msprop:Generator_UserColumnName="UserA">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserB" msprop:Generator_ColumnVarNameInTable="columnUserB" msprop:Generator_ColumnPropNameInRow="UserB" msprop:Generator_ColumnPropNameInTable="UserBColumn" msprop:Generator_UserColumnName="UserB">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Following" msprop:Generator_ColumnVarNameInTable="columnFollowing" msprop:Generator_ColumnPropNameInRow="Following" msprop:Generator_ColumnPropNameInTable="FollowingColumn" msprop:Generator_UserColumnName="Following" type="xs:boolean" />
              <xs:element name="Initiated" msprop:Generator_ColumnVarNameInTable="columnInitiated" msprop:Generator_ColumnPropNameInRow="Initiated" msprop:Generator_ColumnPropNameInTable="InitiatedColumn" msprop:Generator_UserColumnName="Initiated" type="xs:boolean" />
              <xs:element name="InitialCollaboration" msprop:Generator_ColumnVarNameInTable="columnInitialCollaboration" msprop:Generator_ColumnPropNameInRow="InitialCollaboration" msprop:Generator_ColumnPropNameInTable="InitialCollaborationColumn" msprop:Generator_UserColumnName="InitialCollaboration" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DesignSkills" msprop:Generator_TableClassName="DesignSkillsDataTable" msprop:Generator_TableVarName="tableDesignSkills" msprop:Generator_TablePropName="DesignSkills" msprop:Generator_RowDeletingName="DesignSkillsRowDeleting" msprop:Generator_RowChangingName="DesignSkillsRowChanging" msprop:Generator_RowEvHandlerName="DesignSkillsRowChangeEventHandler" msprop:Generator_RowDeletedName="DesignSkillsRowDeleted" msprop:Generator_UserTableName="DesignSkills" msprop:Generator_RowChangedName="DesignSkillsRowChanged" msprop:Generator_RowEvArgName="DesignSkillsRowChangeEvent" msprop:Generator_RowClassName="DesignSkillsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:string" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TypeOfDesign" msprop:Generator_ColumnVarNameInTable="columnTypeOfDesign" msprop:Generator_ColumnPropNameInRow="TypeOfDesign" msprop:Generator_ColumnPropNameInTable="TypeOfDesignColumn" msprop:Generator_UserColumnName="TypeOfDesign" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Software" msprop:Generator_ColumnVarNameInTable="columnSoftware" msprop:Generator_ColumnPropNameInRow="Software" msprop:Generator_ColumnPropNameInTable="SoftwareColumn" msprop:Generator_UserColumnName="Software" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Locations" msprop:Generator_TableClassName="LocationsDataTable" msprop:Generator_TableVarName="tableLocations" msprop:Generator_TablePropName="Locations" msprop:Generator_RowDeletingName="LocationsRowDeleting" msprop:Generator_RowChangingName="LocationsRowChanging" msprop:Generator_RowEvHandlerName="LocationsRowChangeEventHandler" msprop:Generator_RowDeletedName="LocationsRowDeleted" msprop:Generator_UserTableName="Locations" msprop:Generator_RowChangedName="LocationsRowChanged" msprop:Generator_RowEvArgName="LocationsRowChangeEvent" msprop:Generator_RowClassName="LocationsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Address" msprop:Generator_ColumnVarNameInTable="columnAddress" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" msprop:Generator_UserColumnName="Address">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ZipCode" msprop:Generator_ColumnVarNameInTable="columnZipCode" msprop:Generator_ColumnPropNameInRow="ZipCode" msprop:Generator_ColumnPropNameInTable="ZipCodeColumn" msprop:Generator_UserColumnName="ZipCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="State" msprop:Generator_ColumnVarNameInTable="columnState" msprop:Generator_ColumnPropNameInRow="State" msprop:Generator_ColumnPropNameInTable="StateColumn" msprop:Generator_UserColumnName="State">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StateAbbreviation" msprop:Generator_ColumnVarNameInTable="columnStateAbbreviation" msprop:Generator_ColumnPropNameInRow="StateAbbreviation" msprop:Generator_ColumnPropNameInTable="StateAbbreviationColumn" msprop:Generator_UserColumnName="StateAbbreviation" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="City" msprop:Generator_ColumnVarNameInTable="columnCity" msprop:Generator_ColumnPropNameInRow="City" msprop:Generator_ColumnPropNameInTable="CityColumn" msprop:Generator_UserColumnName="City">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="County" msprop:Generator_ColumnVarNameInTable="columnCounty" msprop:Generator_ColumnPropNameInRow="County" msprop:Generator_ColumnPropNameInTable="CountyColumn" msprop:Generator_UserColumnName="County" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Latitude" msprop:Generator_ColumnVarNameInTable="columnLatitude" msprop:Generator_ColumnPropNameInRow="Latitude" msprop:Generator_ColumnPropNameInTable="LatitudeColumn" msprop:Generator_UserColumnName="Latitude" type="xs:decimal" />
              <xs:element name="Longitude" msprop:Generator_ColumnVarNameInTable="columnLongitude" msprop:Generator_ColumnPropNameInRow="Longitude" msprop:Generator_ColumnPropNameInTable="LongitudeColumn" msprop:Generator_UserColumnName="Longitude" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MedicalSkills" msprop:Generator_TableClassName="MedicalSkillsDataTable" msprop:Generator_TableVarName="tableMedicalSkills" msprop:Generator_TablePropName="MedicalSkills" msprop:Generator_RowDeletingName="MedicalSkillsRowDeleting" msprop:Generator_RowChangingName="MedicalSkillsRowChanging" msprop:Generator_RowEvHandlerName="MedicalSkillsRowChangeEventHandler" msprop:Generator_RowDeletedName="MedicalSkillsRowDeleted" msprop:Generator_UserTableName="MedicalSkills" msprop:Generator_RowChangedName="MedicalSkillsRowChanged" msprop:Generator_RowEvArgName="MedicalSkillsRowChangeEvent" msprop:Generator_RowClassName="MedicalSkillsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:string" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CPR" msprop:Generator_ColumnVarNameInTable="columnCPR" msprop:Generator_ColumnPropNameInRow="CPR" msprop:Generator_ColumnPropNameInTable="CPRColumn" msprop:Generator_UserColumnName="CPR" type="xs:boolean" />
              <xs:element name="EKG" msprop:Generator_ColumnVarNameInTable="columnEKG" msprop:Generator_ColumnPropNameInRow="EKG" msprop:Generator_ColumnPropNameInTable="EKGColumn" msprop:Generator_UserColumnName="EKG" type="xs:boolean" />
              <xs:element name="Transfussions" msprop:Generator_ColumnVarNameInTable="columnTransfussions" msprop:Generator_ColumnPropNameInRow="Transfussions" msprop:Generator_ColumnPropNameInTable="TransfussionsColumn" msprop:Generator_UserColumnName="Transfussions" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProgrammingSkills" msprop:Generator_TableClassName="ProgrammingSkillsDataTable" msprop:Generator_TableVarName="tableProgrammingSkills" msprop:Generator_TablePropName="ProgrammingSkills" msprop:Generator_RowDeletingName="ProgrammingSkillsRowDeleting" msprop:Generator_RowChangingName="ProgrammingSkillsRowChanging" msprop:Generator_RowEvHandlerName="ProgrammingSkillsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProgrammingSkillsRowDeleted" msprop:Generator_UserTableName="ProgrammingSkills" msprop:Generator_RowChangedName="ProgrammingSkillsRowChanged" msprop:Generator_RowEvArgName="ProgrammingSkillsRowChangeEvent" msprop:Generator_RowClassName="ProgrammingSkillsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:string" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProgrammingLanguages" msprop:Generator_ColumnVarNameInTable="columnProgrammingLanguages" msprop:Generator_ColumnPropNameInRow="ProgrammingLanguages" msprop:Generator_ColumnPropNameInTable="ProgrammingLanguagesColumn" msprop:Generator_UserColumnName="ProgrammingLanguages" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Software" msprop:Generator_ColumnVarNameInTable="columnSoftware" msprop:Generator_ColumnPropNameInRow="Software" msprop:Generator_ColumnPropNameInTable="SoftwareColumn" msprop:Generator_UserColumnName="Software" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Roles" msprop:Generator_TableClassName="RolesDataTable" msprop:Generator_TableVarName="tableRoles" msprop:Generator_TablePropName="Roles" msprop:Generator_RowDeletingName="RolesRowDeleting" msprop:Generator_RowChangingName="RolesRowChanging" msprop:Generator_RowEvHandlerName="RolesRowChangeEventHandler" msprop:Generator_RowDeletedName="RolesRowDeleted" msprop:Generator_UserTableName="Roles" msprop:Generator_RowChangedName="RolesRowChanged" msprop:Generator_RowEvArgName="RolesRowChangeEvent" msprop:Generator_RowClassName="RolesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Skills" msprop:Generator_TableClassName="SkillsDataTable" msprop:Generator_TableVarName="tableSkills" msprop:Generator_TablePropName="Skills" msprop:Generator_RowDeletingName="SkillsRowDeleting" msprop:Generator_RowChangingName="SkillsRowChanging" msprop:Generator_RowEvHandlerName="SkillsRowChangeEventHandler" msprop:Generator_RowDeletedName="SkillsRowDeleted" msprop:Generator_UserTableName="Skills" msprop:Generator_RowChangedName="SkillsRowChanged" msprop:Generator_RowEvArgName="SkillsRowChangeEvent" msprop:Generator_RowClassName="SkillsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:string" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Expertise" msprop:Generator_ColumnVarNameInTable="columnExpertise" msprop:Generator_ColumnPropNameInRow="Expertise" msprop:Generator_ColumnPropNameInTable="ExpertiseColumn" msprop:Generator_UserColumnName="Expertise" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SkillUserRelation" msprop:Generator_TableClassName="SkillUserRelationDataTable" msprop:Generator_TableVarName="tableSkillUserRelation" msprop:Generator_TablePropName="SkillUserRelation" msprop:Generator_RowDeletingName="SkillUserRelationRowDeleting" msprop:Generator_RowChangingName="SkillUserRelationRowChanging" msprop:Generator_RowEvHandlerName="SkillUserRelationRowChangeEventHandler" msprop:Generator_RowDeletedName="SkillUserRelationRowDeleted" msprop:Generator_UserTableName="SkillUserRelation" msprop:Generator_RowChangedName="SkillUserRelationRowChanged" msprop:Generator_RowEvArgName="SkillUserRelationRowChangeEvent" msprop:Generator_RowClassName="SkillUserRelationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SkillId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnSkillId" msprop:Generator_ColumnPropNameInRow="SkillId" msprop:Generator_ColumnPropNameInTable="SkillIdColumn" msprop:Generator_UserColumnName="SkillId" type="xs:string" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SpeakingSkills" msprop:Generator_TableClassName="SpeakingSkillsDataTable" msprop:Generator_TableVarName="tableSpeakingSkills" msprop:Generator_TablePropName="SpeakingSkills" msprop:Generator_RowDeletingName="SpeakingSkillsRowDeleting" msprop:Generator_RowChangingName="SpeakingSkillsRowChanging" msprop:Generator_RowEvHandlerName="SpeakingSkillsRowChangeEventHandler" msprop:Generator_RowDeletedName="SpeakingSkillsRowDeleted" msprop:Generator_UserTableName="SpeakingSkills" msprop:Generator_RowChangedName="SpeakingSkillsRowChanged" msprop:Generator_RowEvArgName="SpeakingSkillsRowChangeEvent" msprop:Generator_RowClassName="SpeakingSkillsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:string" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Languages" msprop:Generator_ColumnVarNameInTable="columnLanguages" msprop:Generator_ColumnPropNameInRow="Languages" msprop:Generator_ColumnPropNameInTable="LanguagesColumn" msprop:Generator_UserColumnName="Languages" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserClaims" msprop:Generator_TableClassName="UserClaimsDataTable" msprop:Generator_TableVarName="tableUserClaims" msprop:Generator_TablePropName="UserClaims" msprop:Generator_RowDeletingName="UserClaimsRowDeleting" msprop:Generator_RowChangingName="UserClaimsRowChanging" msprop:Generator_RowEvHandlerName="UserClaimsRowChangeEventHandler" msprop:Generator_RowDeletedName="UserClaimsRowDeleted" msprop:Generator_UserTableName="UserClaims" msprop:Generator_RowChangedName="UserClaimsRowChanged" msprop:Generator_RowEvArgName="UserClaimsRowChangeEvent" msprop:Generator_RowClassName="UserClaimsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ClaimType" msprop:Generator_ColumnVarNameInTable="columnClaimType" msprop:Generator_ColumnPropNameInRow="ClaimType" msprop:Generator_ColumnPropNameInTable="ClaimTypeColumn" msprop:Generator_UserColumnName="ClaimType" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ClaimValue" msprop:Generator_ColumnVarNameInTable="columnClaimValue" msprop:Generator_ColumnPropNameInRow="ClaimValue" msprop:Generator_ColumnPropNameInTable="ClaimValueColumn" msprop:Generator_UserColumnName="ClaimValue" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserLocations" msprop:Generator_TableClassName="UserLocationsDataTable" msprop:Generator_TableVarName="tableUserLocations" msprop:Generator_TablePropName="UserLocations" msprop:Generator_RowDeletingName="UserLocationsRowDeleting" msprop:Generator_RowChangingName="UserLocationsRowChanging" msprop:Generator_RowEvHandlerName="UserLocationsRowChangeEventHandler" msprop:Generator_RowDeletedName="UserLocationsRowDeleted" msprop:Generator_UserTableName="UserLocations" msprop:Generator_RowChangedName="UserLocationsRowChanged" msprop:Generator_RowEvArgName="UserLocationsRowChangeEvent" msprop:Generator_RowClassName="UserLocationsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_UserColumnName="UserID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LocationID" msprop:Generator_ColumnVarNameInTable="columnLocationID" msprop:Generator_ColumnPropNameInRow="LocationID" msprop:Generator_ColumnPropNameInTable="LocationIDColumn" msprop:Generator_UserColumnName="LocationID" type="xs:int" />
              <xs:element name="TotalVisitations" msprop:Generator_ColumnVarNameInTable="columnTotalVisitations" msprop:Generator_ColumnPropNameInRow="TotalVisitations" msprop:Generator_ColumnPropNameInTable="TotalVisitationsColumn" msprop:Generator_UserColumnName="TotalVisitations" type="xs:int" />
              <xs:element name="FirstVisited" msprop:Generator_ColumnVarNameInTable="columnFirstVisited" msprop:Generator_ColumnPropNameInRow="FirstVisited" msprop:Generator_ColumnPropNameInTable="FirstVisitedColumn" msprop:Generator_UserColumnName="FirstVisited" type="xs:dateTime" />
              <xs:element name="LastVisited" msprop:Generator_ColumnVarNameInTable="columnLastVisited" msprop:Generator_ColumnPropNameInRow="LastVisited" msprop:Generator_ColumnPropNameInTable="LastVisitedColumn" msprop:Generator_UserColumnName="LastVisited" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserLogins" msprop:Generator_TableClassName="UserLoginsDataTable" msprop:Generator_TableVarName="tableUserLogins" msprop:Generator_TablePropName="UserLogins" msprop:Generator_RowDeletingName="UserLoginsRowDeleting" msprop:Generator_RowChangingName="UserLoginsRowChanging" msprop:Generator_RowEvHandlerName="UserLoginsRowChangeEventHandler" msprop:Generator_RowDeletedName="UserLoginsRowDeleted" msprop:Generator_UserTableName="UserLogins" msprop:Generator_RowChangedName="UserLoginsRowChanged" msprop:Generator_RowEvArgName="UserLoginsRowChangeEvent" msprop:Generator_RowClassName="UserLoginsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LoginProvider" msprop:Generator_ColumnVarNameInTable="columnLoginProvider" msprop:Generator_ColumnPropNameInRow="LoginProvider" msprop:Generator_ColumnPropNameInTable="LoginProviderColumn" msprop:Generator_UserColumnName="LoginProvider">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProviderKey" msprop:Generator_ColumnVarNameInTable="columnProviderKey" msprop:Generator_ColumnPropNameInRow="ProviderKey" msprop:Generator_ColumnPropNameInTable="ProviderKeyColumn" msprop:Generator_UserColumnName="ProviderKey">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserRoles" msprop:Generator_TableClassName="UserRolesDataTable" msprop:Generator_TableVarName="tableUserRoles" msprop:Generator_TablePropName="UserRoles" msprop:Generator_RowDeletingName="UserRolesRowDeleting" msprop:Generator_RowChangingName="UserRolesRowChanging" msprop:Generator_RowEvHandlerName="UserRolesRowChangeEventHandler" msprop:Generator_RowDeletedName="UserRolesRowDeleted" msprop:Generator_UserTableName="UserRoles" msprop:Generator_RowChangedName="UserRolesRowChanged" msprop:Generator_RowEvArgName="UserRolesRowChangeEvent" msprop:Generator_RowClassName="UserRolesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoleId" msprop:Generator_ColumnVarNameInTable="columnRoleId" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" msprop:Generator_UserColumnName="RoleId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_TableVarName="tableUsers" msprop:Generator_TablePropName="Users" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_UserTableName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_RowClassName="UsersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_UserColumnName="UserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FirstName" msprop:Generator_ColumnVarNameInTable="columnFirstName" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_UserColumnName="FirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnVarNameInTable="columnLastName" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_UserColumnName="LastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Biography" msprop:Generator_ColumnVarNameInTable="columnBiography" msprop:Generator_ColumnPropNameInRow="Biography" msprop:Generator_ColumnPropNameInTable="BiographyColumn" msprop:Generator_UserColumnName="Biography" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Created" msprop:Generator_ColumnVarNameInTable="columnCreated" msprop:Generator_ColumnPropNameInRow="Created" msprop:Generator_ColumnPropNameInTable="CreatedColumn" msprop:Generator_UserColumnName="Created" type="xs:dateTime" />
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EmailConfirmed" msprop:Generator_ColumnVarNameInTable="columnEmailConfirmed" msprop:Generator_ColumnPropNameInRow="EmailConfirmed" msprop:Generator_ColumnPropNameInTable="EmailConfirmedColumn" msprop:Generator_UserColumnName="EmailConfirmed" type="xs:boolean" />
              <xs:element name="PasswordHash" msprop:Generator_ColumnVarNameInTable="columnPasswordHash" msprop:Generator_ColumnPropNameInRow="PasswordHash" msprop:Generator_ColumnPropNameInTable="PasswordHashColumn" msprop:Generator_UserColumnName="PasswordHash" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityStamp" msprop:Generator_ColumnVarNameInTable="columnSecurityStamp" msprop:Generator_ColumnPropNameInRow="SecurityStamp" msprop:Generator_ColumnPropNameInTable="SecurityStampColumn" msprop:Generator_UserColumnName="SecurityStamp" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PhoneNumber" msprop:Generator_ColumnVarNameInTable="columnPhoneNumber" msprop:Generator_ColumnPropNameInRow="PhoneNumber" msprop:Generator_ColumnPropNameInTable="PhoneNumberColumn" msprop:Generator_UserColumnName="PhoneNumber" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PhoneNumberConfirmed" msprop:Generator_ColumnVarNameInTable="columnPhoneNumberConfirmed" msprop:Generator_ColumnPropNameInRow="PhoneNumberConfirmed" msprop:Generator_ColumnPropNameInTable="PhoneNumberConfirmedColumn" msprop:Generator_UserColumnName="PhoneNumberConfirmed" type="xs:boolean" />
              <xs:element name="TwoFactorEnabled" msprop:Generator_ColumnVarNameInTable="columnTwoFactorEnabled" msprop:Generator_ColumnPropNameInRow="TwoFactorEnabled" msprop:Generator_ColumnPropNameInTable="TwoFactorEnabledColumn" msprop:Generator_UserColumnName="TwoFactorEnabled" type="xs:boolean" />
              <xs:element name="LockoutEndDateUtc" msprop:Generator_ColumnVarNameInTable="columnLockoutEndDateUtc" msprop:Generator_ColumnPropNameInRow="LockoutEndDateUtc" msprop:Generator_ColumnPropNameInTable="LockoutEndDateUtcColumn" msprop:Generator_UserColumnName="LockoutEndDateUtc" type="xs:dateTime" minOccurs="0" />
              <xs:element name="LockoutEnabled" msprop:Generator_ColumnVarNameInTable="columnLockoutEnabled" msprop:Generator_ColumnPropNameInRow="LockoutEnabled" msprop:Generator_ColumnPropNameInTable="LockoutEnabledColumn" msprop:Generator_UserColumnName="LockoutEnabled" type="xs:boolean" />
              <xs:element name="AccessFailedCount" msprop:Generator_ColumnVarNameInTable="columnAccessFailedCount" msprop:Generator_ColumnPropNameInRow="AccessFailedCount" msprop:Generator_ColumnPropNameInTable="AccessFailedCountColumn" msprop:Generator_UserColumnName="AccessFailedCount" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:__MigrationHistory" />
      <xs:field xpath="mstns:MigrationId" />
      <xs:field xpath="mstns:ContextKey" />
    </xs:unique>
    <xs:unique name="Businesses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Businesses" />
      <xs:field xpath="mstns:Name" />
      <xs:field xpath="mstns:LocationID" />
    </xs:unique>
    <xs:unique name="Collaborators_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Collaborators" />
      <xs:field xpath="mstns:UserA" />
      <xs:field xpath="mstns:UserB" />
    </xs:unique>
    <xs:unique name="DesignSkills_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DesignSkills" />
      <xs:field xpath="mstns:ID" />
      <xs:field xpath="mstns:Type" />
    </xs:unique>
    <xs:unique name="Locations_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Locations" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="MedicalSkills_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MedicalSkills" />
      <xs:field xpath="mstns:ID" />
      <xs:field xpath="mstns:Type" />
    </xs:unique>
    <xs:unique name="ProgrammingSkills_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProgrammingSkills" />
      <xs:field xpath="mstns:ID" />
      <xs:field xpath="mstns:Type" />
    </xs:unique>
    <xs:unique name="Roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roles" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Skills_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Skills" />
      <xs:field xpath="mstns:ID" />
      <xs:field xpath="mstns:Type" />
    </xs:unique>
    <xs:unique name="SkillUserRelation_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SkillUserRelation" />
      <xs:field xpath="mstns:UserId" />
      <xs:field xpath="mstns:SkillId" />
      <xs:field xpath="mstns:Type" />
    </xs:unique>
    <xs:unique name="SpeakingSkills_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SpeakingSkills" />
      <xs:field xpath="mstns:ID" />
      <xs:field xpath="mstns:Type" />
    </xs:unique>
    <xs:unique name="UserClaims_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserClaims" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="UserLocations_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserLocations" />
      <xs:field xpath="mstns:UserID" />
      <xs:field xpath="mstns:LocationID" />
    </xs:unique>
    <xs:unique name="UserLogins_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserLogins" />
      <xs:field xpath="mstns:LoginProvider" />
      <xs:field xpath="mstns:ProviderKey" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
    <xs:unique name="UserRoles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserRoles" />
      <xs:field xpath="mstns:UserId" />
      <xs:field xpath="mstns:RoleId" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_dbo.Businesses_dbo.Locations_LocationID" msdata:parent="Locations" msdata:child="Businesses" msdata:parentkey="ID" msdata:childkey="LocationID" msprop:Generator_UserChildTable="Businesses" msprop:Generator_ChildPropName="GetBusinessesRows" msprop:Generator_UserRelationName="FK_dbo.Businesses_dbo.Locations_LocationID" msprop:Generator_RelationVarName="_relationFK_dbo_Businesses_dbo_Locations_LocationID" msprop:Generator_UserParentTable="Locations" msprop:Generator_ParentPropName="LocationsRow" />
      <msdata:Relationship name="FK_dbo.Collaborators_dbo.Users_UserA" msdata:parent="Users" msdata:child="Collaborators" msdata:parentkey="Id" msdata:childkey="UserA" msprop:Generator_UserChildTable="Collaborators" msprop:Generator_ChildPropName="_GetCollaboratorsRowsByFK_dbo_Collaborators_dbo_Users_UserA" msprop:Generator_UserRelationName="FK_dbo.Collaborators_dbo.Users_UserA" msprop:Generator_RelationVarName="_relationFK_dbo_Collaborators_dbo_Users_UserA" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="_UsersRowByFK_dbo_Collaborators_dbo_Users_UserA" />
      <msdata:Relationship name="FK_dbo.Collaborators_dbo.Users_UserB" msdata:parent="Users" msdata:child="Collaborators" msdata:parentkey="Id" msdata:childkey="UserB" msprop:Generator_UserChildTable="Collaborators" msprop:Generator_ChildPropName="_GetCollaboratorsRowsByFK_dbo_Collaborators_dbo_Users_UserB" msprop:Generator_UserRelationName="FK_dbo.Collaborators_dbo.Users_UserB" msprop:Generator_RelationVarName="_relationFK_dbo_Collaborators_dbo_Users_UserB" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="_UsersRowByFK_dbo_Collaborators_dbo_Users_UserB" />
      <msdata:Relationship name="FK_dbo.DesignSkills_dbo.Skills_ID_Type" msdata:parent="Skills" msdata:child="DesignSkills" msdata:parentkey="ID Type" msdata:childkey="ID Type" msprop:Generator_UserChildTable="DesignSkills" msprop:Generator_ChildPropName="GetDesignSkillsRows" msprop:Generator_UserRelationName="FK_dbo.DesignSkills_dbo.Skills_ID_Type" msprop:Generator_RelationVarName="_relationFK_dbo_DesignSkills_dbo_Skills_ID_Type" msprop:Generator_UserParentTable="Skills" msprop:Generator_ParentPropName="SkillsRowParent" />
      <msdata:Relationship name="FK_dbo.MedicalSkills_dbo.Skills_ID_Type" msdata:parent="Skills" msdata:child="MedicalSkills" msdata:parentkey="ID Type" msdata:childkey="ID Type" msprop:Generator_UserChildTable="MedicalSkills" msprop:Generator_ChildPropName="GetMedicalSkillsRows" msprop:Generator_UserRelationName="FK_dbo.MedicalSkills_dbo.Skills_ID_Type" msprop:Generator_RelationVarName="_relationFK_dbo_MedicalSkills_dbo_Skills_ID_Type" msprop:Generator_UserParentTable="Skills" msprop:Generator_ParentPropName="SkillsRowParent" />
      <msdata:Relationship name="FK_dbo.ProgrammingSkills_dbo.Skills_ID_Type" msdata:parent="Skills" msdata:child="ProgrammingSkills" msdata:parentkey="ID Type" msdata:childkey="ID Type" msprop:Generator_UserChildTable="ProgrammingSkills" msprop:Generator_ChildPropName="GetProgrammingSkillsRows" msprop:Generator_UserRelationName="FK_dbo.ProgrammingSkills_dbo.Skills_ID_Type" msprop:Generator_RelationVarName="_relationFK_dbo_ProgrammingSkills_dbo_Skills_ID_Type" msprop:Generator_UserParentTable="Skills" msprop:Generator_ParentPropName="SkillsRowParent" />
      <msdata:Relationship name="FK_dbo.SkillUserRelation_dbo.Skills_SkillId_Type" msdata:parent="Skills" msdata:child="SkillUserRelation" msdata:parentkey="ID Type" msdata:childkey="SkillId Type" msprop:Generator_UserChildTable="SkillUserRelation" msprop:Generator_ChildPropName="GetSkillUserRelationRows" msprop:Generator_UserRelationName="FK_dbo.SkillUserRelation_dbo.Skills_SkillId_Type" msprop:Generator_ParentPropName="SkillsRowParent" msprop:Generator_RelationVarName="_relationFK_dbo_SkillUserRelation_dbo_Skills_SkillId_Type" msprop:Generator_UserParentTable="Skills" />
      <msdata:Relationship name="FK_dbo.SkillUserRelation_dbo.Users_UserId" msdata:parent="Users" msdata:child="SkillUserRelation" msdata:parentkey="Id" msdata:childkey="UserId" msprop:Generator_UserChildTable="SkillUserRelation" msprop:Generator_ChildPropName="GetSkillUserRelationRows" msprop:Generator_UserRelationName="FK_dbo.SkillUserRelation_dbo.Users_UserId" msprop:Generator_RelationVarName="_relationFK_dbo_SkillUserRelation_dbo_Users_UserId" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="UsersRow" />
      <msdata:Relationship name="FK_dbo.SpeakingSkills_dbo.Skills_ID_Type" msdata:parent="Skills" msdata:child="SpeakingSkills" msdata:parentkey="ID Type" msdata:childkey="ID Type" msprop:Generator_UserChildTable="SpeakingSkills" msprop:Generator_ChildPropName="GetSpeakingSkillsRows" msprop:Generator_UserRelationName="FK_dbo.SpeakingSkills_dbo.Skills_ID_Type" msprop:Generator_ParentPropName="SkillsRowParent" msprop:Generator_RelationVarName="_relationFK_dbo_SpeakingSkills_dbo_Skills_ID_Type" msprop:Generator_UserParentTable="Skills" />
      <msdata:Relationship name="FK_dbo.UserClaims_dbo.Users_UserId" msdata:parent="Users" msdata:child="UserClaims" msdata:parentkey="Id" msdata:childkey="UserId" msprop:Generator_UserChildTable="UserClaims" msprop:Generator_ChildPropName="GetUserClaimsRows" msprop:Generator_UserRelationName="FK_dbo.UserClaims_dbo.Users_UserId" msprop:Generator_RelationVarName="_relationFK_dbo_UserClaims_dbo_Users_UserId" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="UsersRow" />
      <msdata:Relationship name="FK_dbo.UserLocations_dbo.Locations_LocationID" msdata:parent="Locations" msdata:child="UserLocations" msdata:parentkey="ID" msdata:childkey="LocationID" msprop:Generator_UserChildTable="UserLocations" msprop:Generator_ChildPropName="GetUserLocationsRows" msprop:Generator_UserRelationName="FK_dbo.UserLocations_dbo.Locations_LocationID" msprop:Generator_ParentPropName="LocationsRow" msprop:Generator_RelationVarName="_relationFK_dbo_UserLocations_dbo_Locations_LocationID" msprop:Generator_UserParentTable="Locations" />
      <msdata:Relationship name="FK_dbo.UserLocations_dbo.Users_UserID" msdata:parent="Users" msdata:child="UserLocations" msdata:parentkey="Id" msdata:childkey="UserID" msprop:Generator_UserChildTable="UserLocations" msprop:Generator_ChildPropName="GetUserLocationsRows" msprop:Generator_UserRelationName="FK_dbo.UserLocations_dbo.Users_UserID" msprop:Generator_RelationVarName="_relationFK_dbo_UserLocations_dbo_Users_UserID" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="UsersRow" />
      <msdata:Relationship name="FK_dbo.UserLogins_dbo.Users_UserId" msdata:parent="Users" msdata:child="UserLogins" msdata:parentkey="Id" msdata:childkey="UserId" msprop:Generator_UserChildTable="UserLogins" msprop:Generator_ChildPropName="GetUserLoginsRows" msprop:Generator_UserRelationName="FK_dbo.UserLogins_dbo.Users_UserId" msprop:Generator_RelationVarName="_relationFK_dbo_UserLogins_dbo_Users_UserId" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="UsersRow" />
      <msdata:Relationship name="FK_dbo.UserRoles_dbo.Roles_RoleId" msdata:parent="Roles" msdata:child="UserRoles" msdata:parentkey="Id" msdata:childkey="RoleId" msprop:Generator_UserChildTable="UserRoles" msprop:Generator_ChildPropName="GetUserRolesRows" msprop:Generator_UserRelationName="FK_dbo.UserRoles_dbo.Roles_RoleId" msprop:Generator_ParentPropName="RolesRow" msprop:Generator_RelationVarName="_relationFK_dbo_UserRoles_dbo_Roles_RoleId" msprop:Generator_UserParentTable="Roles" />
      <msdata:Relationship name="FK_dbo.UserRoles_dbo.Users_UserId" msdata:parent="Users" msdata:child="UserRoles" msdata:parentkey="Id" msdata:childkey="UserId" msprop:Generator_UserChildTable="UserRoles" msprop:Generator_ChildPropName="GetUserRolesRows" msprop:Generator_UserRelationName="FK_dbo.UserRoles_dbo.Users_UserId" msprop:Generator_RelationVarName="_relationFK_dbo_UserRoles_dbo_Users_UserId" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="UsersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>